{
  "openapi": "3.0.0",
  "info": {
    "title": "Api_test - Contele fullstack-junior",
    "description": "API que realiza um CRUD de users em um banco postgreSQL usando NodeJs, Express e Knex",
    "contact": "miqs_carvalho@hotmail.com",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "http://localhost:3000/api/v1",
      "description": "Base Url"
    }
  ],

  "paths": {
    "/users": {
      "post": {
        "summary": "Cadastro de usuário",
        "description": "Essa rota será responsável por cadastrar um novo usuário",
        "tags": ["Users"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              },
              "examples": {
                "user": {
                  "value": {
                    "email": "teste@mail.com",
                    "senha": "1234"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "409": {
            "description": "Conflict - email já cadastrado"
          },
          "400": {
            "description": "Bad Request - dados do body faltando/inválidos"
          },
          "201": {
            "description": "Created"
          }
        }
      },
      "get": {
        "summary": "Listar usuarios",
        "description": "Mostra todos os usuários em um array",
        "tags": ["Users"],

        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            }
          }
        }
      },

      "delete": {
        "summary": "Deletar usuarios",
        "description": "Deleta todos os usuários da tabela",
        "tags": ["Users"],

        "responses": {
          "200": {
            "description": "Ok"
          }
        }
      }
    },

    "/users/{user_id}": {
      "get": {
        "summary": "Mostrar usuário por id",
        "description": "Mostra um usuário com o id especificado no parâmetro",
        "tags": ["Users"],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "description": "id do usuário para identificação",
            "required": true
          }
        ],
        "responses": {
          "406": {
            "description": "Not Acceptable - parametro user_id inválido"
          },
          "404": {
            "description": "Not Found - id do usuário não encontrado"
          },
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Atualizar usuário por id",
        "description": "Atualiza um usuário com o id especificado no parâmetro",
        "tags": ["Users"],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "description": "id do usuário para identificação",
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              },
              "examples": {
                "user": {
                  "value": {
                    "email": "teste_update@mail.com",
                    "senha": "asdf"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "409": {
            "description": "Conflict - email já cadastrado"
          },
          "406": {
            "description": "Not Acceptable - parametro user_id inválido"
          },
          "404": {
            "description": "Not Found - id do usuário não encontrado"
          },
          "400": {
            "description": "Bad Request - dados do body faltando/inválidos"
          },
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Deletar usuário por id",
        "description": "Deleta um usuário com o id especificado no parâmetro",
        "tags": ["Users"],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "description": "id do usuário para identificação",
            "required": true
          }
        ],
        "responses": {
          "406": {
            "description": "Not Acceptable - parametro user_id inválido"
          },
          "404": {
            "description": "Not Found - id do usuário não encontrado"
          },

          "200": {
            "description": "Ok"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number"
          },
          "email": {
            "type": "string"
          },
          "senha": {
            "type": "string"
          }
        }
      }
    }
  }
}
